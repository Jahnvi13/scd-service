syntax = "proto3";

package scd;

option go_package = "genpb/proto;proto";

service SCDService {
  rpc GetLatestJobs (GetLatestJobsRequest) returns (GetLatestJobsResponse);
  rpc UpdateJob (UpdateJobRequest) returns (Job);

  rpc GetLatestTimelogs (GetLatestTimelogsRequest) returns (GetLatestTimelogsResponse);
  rpc UpdateTimelog (UpdateTimelogRequest) returns (Timelog);

  rpc GetLatestPaymentLineItems (GetLatestPaymentLineItemsRequest) returns (GetLatestPaymentLineItemsResponse);
  rpc UpdatePaymentLineItem (UpdatePaymentLineItemRequest) returns (PaymentLineItem);
}

message Job {
  string id = 1;
  int32 version = 2;
  string uid = 3;
  string status = 4;
  float rate = 5;
  string title = 6;
  string company_id = 7;
  string contractor_id = 8;
}

message Timelog {
  string id = 1;
  int32 version = 2;
  string uid = 3;
  int64 duration = 4;
  int64 time_start = 5;
  int64 time_end = 6;
  string type = 7;
  string job_uid = 8;
}

message PaymentLineItem {
  string id = 1;
  int32 version = 2;
  string uid = 3;
  string job_uid = 4;
  string timelog_uid = 5;
  float amount = 6;
  string status = 7;
}

message GetLatestJobsRequest {
  string status_filter = 1; // optional filter
}

message GetLatestJobsResponse {
  repeated Job jobs = 1;
}

message UpdateJobRequest {
  string id = 1;
  map<string, string> updated_fields = 2;
}

message GetLatestTimelogsRequest {
  string type_filter = 1; // optional filter
}

message GetLatestTimelogsResponse {
  repeated Timelog timelogs = 1;
}

message UpdateTimelogRequest {
  string id = 1;
  map<string, string> updated_fields = 2;
}

message GetLatestPaymentLineItemsRequest {
  string status_filter = 1; // optional filter
}

message GetLatestPaymentLineItemsResponse {
  repeated PaymentLineItem items = 1;
}

message UpdatePaymentLineItemRequest {
  string id = 1;
  map<string, string> updated_fields = 2;
}
